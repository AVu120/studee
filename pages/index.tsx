import {
  Button,
  FormControl,
  FormErrorMessage,
  FormLabel,
  Input,
} from "@chakra-ui/react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import type { ChangeEvent } from "react";
import { useState } from "react";

import styles from "../styles/Home.module.css";
import connectToDatabase from "../utils/database/mongodb";

const Home: NextPage = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const errors = { email: email === "", password: password === "" };

  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) =>
    setEmail(e.target.value);
  const onChangePassword = (e: ChangeEvent<HTMLInputElement>) =>
    setPassword(e.target.value);

  return (
    <div className={styles.container}>
      <Head>
        <title>Studee - log in or sign up</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Studee - log in or sign up</h1>
        <form
          onSubmit={(e) => {
            e.preventDefault();
            alert("BAM");
          }}
        >
          <FormControl isInvalid={errors.email}>
            <FormLabel htmlFor="email">Email address</FormLabel>
            <Input id="email" type="email" onChange={onChangeEmail} />
            {errors.email && (
              <FormErrorMessage>Email is required</FormErrorMessage>
            )}
          </FormControl>
          <FormControl isInvalid={errors.password}>
            <FormLabel htmlFor="password">Password</FormLabel>
            <Input id="password" type="password" onChange={onChangePassword} />
            {errors.password && (
              <FormErrorMessage>Password is required</FormErrorMessage>
            )}
          </FormControl>
          <Button
            mt={4}
            colorScheme="teal"
            type="submit"
            isDisabled={errors.email || errors.password}
          >
            Submit
          </Button>
        </form>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;

export const getServerSideProps = async () => {
  try {
    // client.db() will be the default database passed in the MONGODB_URI
    // You can change the database by calling the client.db() function and specifying a database like:
    // const db = client.db("myDatabase");
    // Then you can execute queries against your database like so:
    // db.find({}) or any of the MongoDB Node Driver commands
    await connectToDatabase();
    return {
      props: {},
    };
  } catch (e) {
    // eslint-disable-next-line no-console
    console.error(e);
    return {
      props: {},
    };
  }
};
